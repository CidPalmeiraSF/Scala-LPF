def concatena(l:List[Int],m:List[Int]):List[Int] ={
  l++m
}

def repetidos(l:List[Int]):List[Int] ={
  l match {
    case Nil => Nil
    case head::tail => if(tail.contains(head)) head::repetidos(tail) else repetidos(tail)
  }
}
def interseccao(l:List[Int],m:List[Int]):List[Int] ={
  (l,m) match {
    case (Nil,Nil) => Nil
    case _=>repetidos(concatena(l,m))
  }
}

val lista1:List[Int] = List(3,6,5,7)
val lista2:List[Int] = List(9,7,5,1,3)
println(interseccao(lista1,lista2))
